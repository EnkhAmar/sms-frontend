{"version":3,"sources":["history.js","auth/FetchInterceptor.js","views/auth-views/components/LoginForm.js","views/auth-views/authentication/login-1/index.js","views/auth-views/authentication/login/index.js"],"names":["history","service","axios","create","baseURL","API_BASE_URL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","LoginForm","props","useHistory","showForgetPassword","onForgetPasswordClick","showLoading","extra","auth","allowRedirect","loading","showMessage","redirect","access_token","useSelector","state","userLogin","token","dispatch","useDispatch","useEffect","setTimeout","hideAuthMessage","div","initial","opacity","marginBottom","animate","type","showIcon","layout","name","onFinish","values","login","Item","label","rules","required","prefix","MailOutlined","className","onClick","Password","LockOutlined","htmlType","block","defaultProps","otherSignIn","mapDispatchToProps","showAuthMessage","authenticated","connect","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","LoginOne","theme","currentTheme","style","justify","xs","sm","md","lg","src","alt","msg","Login"],"mappings":"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","file":"static/js/30.b9a03b6d.chunk.js","sourcesContent":["import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Remove token and redirect \r\n\tif (error.response.status === 400 || error.response.status === 403) {\r\n\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\tnotificationParam.description = 'Please login again'\r\n\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\tif (error.response.status === 404) {\r\n\t\tnotificationParam.message = 'Not Found'\r\n\t}\r\n\r\n\tif (error.response.status === 500) {\r\n\t\tnotificationParam.message = 'Internal Server Error'\r\n\t}\r\n\t\r\n\tif (error.response.status === 508) {\r\n\t\tnotificationParam.message = 'Time Out'\r\n\t}\r\n\r\n\tnotification.error(notificationParam)\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Form, Input, Alert } from \"antd\";\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n\tsignIn,\r\n\tshowLoading,\r\n\tauthenticated\r\n} from 'redux/actions/Auth';\r\nimport {\r\n\tlogin,\r\n\thideAuthMessage,\r\n\tshowAuthMessage\r\n} from 'redux/actions/userActions'\r\nimport JwtAuthService from 'services/JwtAuthService'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport const LoginForm = (props) => {\r\n\tlet history = useHistory();\r\n\tconst {\r\n\t\tshowForgetPassword,\r\n\t\tonForgetPasswordClick,\r\n\t\tshowLoading,\r\n\t\textra,\r\n\t\terror,\r\n\t\tauth,\r\n\t\tallowRedirect\r\n\t} = props\r\n\t \r\n\tconst {loading, message, showMessage, redirect} = auth;\r\n\t \r\n\r\n\tconst userLogin = useSelector(state => state.userLogin)\r\n\tconst { token: access_token } = userLogin\r\n\t \r\n\t \r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst onLogin = values => {\r\n\t\tshowLoading()\r\n\t\t// signIn(values)\r\n\t\tdispatch(login(values))\r\n\t};\r\n\t \r\n\tuseEffect(() => {\r\n\t\t \r\n\t\t \r\n\t\t \r\n\t\t \r\n\t\tif (access_token !== null && allowRedirect) {\r\n\t\t\t \r\n\t\t\thistory.push(redirect)\r\n\t\t}\r\n\t\tif(showMessage) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\thideAuthMessage();\r\n\t\t\t}, 3000);\r\n\t\t\t \r\n\t\t}\r\n\t}, [history, redirect, error, showMessage, access_token]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div\r\n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }}\r\n\t\t\t\tanimate={{\r\n\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\tmarginBottom: showMessage ? 20 : 0\r\n\t\t\t\t}}>\r\n\t\t\t\t<Alert type=\"error\" showIcon message={message}></Alert>\r\n\t\t\t</motion.div>\r\n\t\t\t<Form\r\n\t\t\t\tlayout=\"vertical\"\r\n\t\t\t\tname=\"login-form\"\r\n\t\t\t\tonFinish={onLogin}\r\n\t\t\t>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: 'Please input your email',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttype: 'email',\r\n\t\t\t\t\t\t\tmessage: 'Please enter a validate email!'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}>\r\n\t\t\t\t\t<Input prefix={<MailOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t<div className={`${showForgetPassword? 'd-flex justify-content-between w-100 align-items-center' : ''}`}>\r\n\t\t\t\t\t\t\t<span>Password</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tshowForgetPassword &&\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tonClick={() => onForgetPasswordClick}\r\n\t\t\t\t\t\t\t\t\tclassName=\"cursor-pointer font-size-sm font-weight-normal text-muted\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tForget Password?\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: 'Please input your password',\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t{ extra }\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nLoginForm.propTypes = {\r\n\totherSignIn: PropTypes.bool,\r\n\tshowForgetPassword: PropTypes.bool,\r\n\textra: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n};\r\n\r\nLoginForm.defaultProps = {\r\n\totherSignIn: true,\r\n\tshowForgetPassword: false\r\n};\r\n\r\n// const mapStateToProps = ({auth}) => {\r\n// \tconst {loading, message, showMessage, token, redirect} = auth;\r\n//   \treturn {loading, message, showMessage, token, redirect}\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n\terror: state.error\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\tshowAuthMessage,\r\n\tshowLoading,\r\n\thideAuthMessage,\r\n\tauthenticated\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\r\n","import React from 'react'\r\nimport LoginForm from '../../components/LoginForm'\r\nimport { Card, Row, Col } from \"antd\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst backgroundStyle = {\r\n\tbackgroundImage: 'url(/img/others/img-17.jpg)',\r\n\tbackgroundRepeat: 'no-repeat',\r\n\tbackgroundSize: 'cover'\r\n}\r\n\r\nconst LoginOne = props => {\r\n\t \r\n\tconst theme = useSelector(state => state.theme.currentTheme)\r\n\treturn (\r\n\t\t<div className=\"h-100\" style={backgroundStyle}>\r\n\t\t\t<div className=\"container d-flex flex-column justify-content-center h-100\">\r\n\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={7}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<div className=\"my-4\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={`/img/${theme === 'light' ? 'logo.png': 'logo-white.png'}`} alt=\"\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t<LoginForm {...props} msg='hello' />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LoginOne\r\n","import React from 'react'\r\nimport LoginOne from '../login-1'\r\n\r\nconst Login = () => {\r\n\treturn (\r\n\t\t<LoginOne allowRedirect={true} />\r\n\t)\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}